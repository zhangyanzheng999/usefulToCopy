<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.neu.his.dao.BillMapper">
	<resultMap id="BaseResultMap" type="cn.neu.his.bean.Bill">
		<id column="Bill_ID" jdbcType="INTEGER" property="billId" />
		<result column="Bill_Code" jdbcType="INTEGER"
			property="billCode" />
		<result column="Bill_Amount" jdbcType="REAL"
			property="billAmount" />
		<result column="Bill_State" jdbcType="INTEGER"
			property="billState" />
		<result column="Retreat_Time" jdbcType="TIMESTAMP"
			property="retreatTime" />
		<result column="Retreat_Person_ID" jdbcType="INTEGER"
			property="retreatPersonId" />
		<result column="Register_ID" jdbcType="INTEGER"
			property="registerId" />
		<result column="Retreat_Way" jdbcType="INTEGER"
			property="retreatWay" />
		<result column="Red_Bill_Code" jdbcType="INTEGER"
			property="redBillCode" />
		<result column="Red_Bill_State" jdbcType="INTEGER"
			property="redBillState" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		Bill_ID, Bill_Code, Bill_Amount, Bill_State, Retreat_Time, Retreat_Person_ID,
		Register_ID,
		Retreat_Way, Red_Bill_Code, Red_Bill_State
	</sql>
	<select id="selectByExample"
		parameterType="cn.neu.his.bean.BillExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from bill
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from bill
		where Bill_ID = #{billId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from bill
		where Bill_ID = #{billId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.neu.his.bean.BillExample">
		delete from bill
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.neu.his.bean.Bill">
		insert into bill (Bill_ID, Bill_Code, Bill_Amount,
		Bill_State, Retreat_Time, Retreat_Person_ID,
		Register_ID, Retreat_Way, Red_Bill_Code,
		Red_Bill_State)
		values (#{billId,jdbcType=INTEGER}, #{billCode,jdbcType=INTEGER},
		#{billAmount,jdbcType=REAL},
		#{billState,jdbcType=INTEGER}, #{retreatTime,jdbcType=TIMESTAMP},
		#{retreatPersonId,jdbcType=INTEGER},
		#{registerId,jdbcType=INTEGER}, #{retreatWay,jdbcType=INTEGER}, #{redBillCode,jdbcType=INTEGER},
		#{redBillState,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.neu.his.bean.Bill">
		insert into bill
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="billId != null">
				Bill_ID,
			</if>
			<if test="billCode != null">
				Bill_Code,
			</if>
			<if test="billAmount != null">
				Bill_Amount,
			</if>
			<if test="billState != null">
				Bill_State,
			</if>
			<if test="retreatTime != null">
				Retreat_Time,
			</if>
			<if test="retreatPersonId != null">
				Retreat_Person_ID,
			</if>
			<if test="registerId != null">
				Register_ID,
			</if>
			<if test="retreatWay != null">
				Retreat_Way,
			</if>
			<if test="redBillCode != null">
				Red_Bill_Code,
			</if>
			<if test="redBillState != null">
				Red_Bill_State,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="billId != null">
				#{billId,jdbcType=INTEGER},
			</if>
			<if test="billCode != null">
				#{billCode,jdbcType=INTEGER},
			</if>
			<if test="billAmount != null">
				#{billAmount,jdbcType=REAL},
			</if>
			<if test="billState != null">
				#{billState,jdbcType=INTEGER},
			</if>
			<if test="retreatTime != null">
				#{retreatTime,jdbcType=TIMESTAMP},
			</if>
			<if test="retreatPersonId != null">
				#{retreatPersonId,jdbcType=INTEGER},
			</if>
			<if test="registerId != null">
				#{registerId,jdbcType=INTEGER},
			</if>
			<if test="retreatWay != null">
				#{retreatWay,jdbcType=INTEGER},
			</if>
			<if test="redBillCode != null">
				#{redBillCode,jdbcType=INTEGER},
			</if>
			<if test="redBillState != null">
				#{redBillState,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.neu.his.bean.BillExample"
		resultType="java.lang.Long">
		select count(*) from bill
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update bill
		<set>
			<if test="record.billId != null">
				Bill_ID = #{record.billId,jdbcType=INTEGER},
			</if>
			<if test="record.billCode != null">
				Bill_Code = #{record.billCode,jdbcType=INTEGER},
			</if>
			<if test="record.billAmount != null">
				Bill_Amount = #{record.billAmount,jdbcType=REAL},
			</if>
			<if test="record.billState != null">
				Bill_State = #{record.billState,jdbcType=INTEGER},
			</if>
			<if test="record.retreatTime != null">
				Retreat_Time = #{record.retreatTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.retreatPersonId != null">
				Retreat_Person_ID = #{record.retreatPersonId,jdbcType=INTEGER},
			</if>
			<if test="record.registerId != null">
				Register_ID = #{record.registerId,jdbcType=INTEGER},
			</if>
			<if test="record.retreatWay != null">
				Retreat_Way = #{record.retreatWay,jdbcType=INTEGER},
			</if>
			<if test="record.redBillCode != null">
				Red_Bill_Code = #{record.redBillCode,jdbcType=INTEGER},
			</if>
			<if test="record.redBillState != null">
				Red_Bill_State = #{record.redBillState,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update bill
		set Bill_ID = #{record.billId,jdbcType=INTEGER},
		Bill_Code = #{record.billCode,jdbcType=INTEGER},
		Bill_Amount = #{record.billAmount,jdbcType=REAL},
		Bill_State = #{record.billState,jdbcType=INTEGER},
		Retreat_Time = #{record.retreatTime,jdbcType=TIMESTAMP},
		Retreat_Person_ID = #{record.retreatPersonId,jdbcType=INTEGER},
		Register_ID = #{record.registerId,jdbcType=INTEGER},
		Retreat_Way = #{record.retreatWay,jdbcType=INTEGER},
		Red_Bill_Code = #{record.redBillCode,jdbcType=INTEGER},
		Red_Bill_State = #{record.redBillState,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.neu.his.bean.Bill">
		update bill
		<set>
			<if test="billCode != null">
				Bill_Code = #{billCode,jdbcType=INTEGER},
			</if>
			<if test="billAmount != null">
				Bill_Amount = #{billAmount,jdbcType=REAL},
			</if>
			<if test="billState != null">
				Bill_State = #{billState,jdbcType=INTEGER},
			</if>
			<if test="retreatTime != null">
				Retreat_Time = #{retreatTime,jdbcType=TIMESTAMP},
			</if>
			<if test="retreatPersonId != null">
				Retreat_Person_ID = #{retreatPersonId,jdbcType=INTEGER},
			</if>
			<if test="registerId != null">
				Register_ID = #{registerId,jdbcType=INTEGER},
			</if>
			<if test="retreatWay != null">
				Retreat_Way = #{retreatWay,jdbcType=INTEGER},
			</if>
			<if test="redBillCode != null">
				Red_Bill_Code = #{redBillCode,jdbcType=INTEGER},
			</if>
			<if test="redBillState != null">
				Red_Bill_State = #{redBillState,jdbcType=INTEGER},
			</if>
		</set>
		where Bill_ID = #{billId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="cn.neu.his.bean.Bill">
		update bill
		set Bill_Code = #{billCode,jdbcType=INTEGER},
		Bill_Amount = #{billAmount,jdbcType=REAL},
		Bill_State = #{billState,jdbcType=INTEGER},
		Retreat_Time = #{retreatTime,jdbcType=TIMESTAMP},
		Retreat_Person_ID = #{retreatPersonId,jdbcType=INTEGER},
		Register_ID = #{registerId,jdbcType=INTEGER},
		Retreat_Way = #{retreatWay,jdbcType=INTEGER},
		Red_Bill_Code = #{redBillCode,jdbcType=INTEGER},
		Red_Bill_State = #{redBillState,jdbcType=INTEGER}
		where Bill_ID = #{billId,jdbcType=INTEGER}
	</update>
</mapper>