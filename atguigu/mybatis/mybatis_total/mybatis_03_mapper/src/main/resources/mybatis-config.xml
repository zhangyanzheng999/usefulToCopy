<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
        1、mybatis可以使用properties标签来引入外部properties配置文件的内容；
        resource: 引入类路径下的资源
        url: 引入网络路径或者磁盘路径下的资源
    -->
    <properties resource="dbconfig.properties"></properties>

    <!--
        2、settings包含很多重要的设置项
        setting:用来设置每一个设置项
            name:设置项名
            value:设置项取值
    -->
    <settings>
        <!--驼峰命名法-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--<setting name="useActualParamName" value="true"/>-->

        <setting name="jdbcTypeForNull" value="NULL"/>
        <!--显示地指定每个我们需要更改的配置的值，即使他是默认的。防止版本更新带来的问题-->
        <!--懒加载 开启之后联级加载的值在使用的时候才加载-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!--侵入加载 开启的话全部加载-->
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>

    <!--
        3、typeAliases:别名处理器,可以为我们的java类型起别名
            别名不区分大小写
                1)、typeAlias:为某个java类型起别名
                        type:要起别名的类型全类名；默认别名就是类名小写
                        alias: 指定别名
                2)、package:为某个包下的所有类批量起别名
                        name:指定报名(为当前包以及下面所有的后代包的每一个类都起一个默认别名(类名小写))
                    批量起别名的情况下，使用@Alias注解为某个类型定指新的别名
    -->
    <typeAliases>
        <!--  <typeAlias type="com.atguigu.mybatis.bean.Employee"  alias="emp"></typeAlias>-->
        <package name="com.atguigu.mybatis.bean"></package>
    </typeAliases>


    <typeHandlers>

    </typeHandlers>

    <!--
        4、environments: mybatis可以配置多种环境,通过指定default指定使用某种环境，可以达到快速切换
            environment:配置具体的环境信息；必须有两个标签；id代表当前环境的唯一标识
                transactionManager:事务管理器
                    type:事务管理器的类型【JDBC(JdbcTransactionFactory)|MANAGED(ManagedTransactionFactory)】
                            也可以自定义事务管理器：实现TransactionFactory接口，type写实现类的全类名
                dataSource:数据源
                    type:数据源类型； UNPOOLED(UnpooledDataSourceFactory)|
                                    POOLED(PooledDataSourceFactory)|
                                    JNDI(JndiDataSourceFactory)
                    自定义数据源:实现DataSourceFactory接口,type是自定义数据源全类名
    -->

    <environments default="dev_mysql">
        <environment id="dev_mysql">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>

        <environment id="dev_oracle">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="${orcl.driver}"/>
                <property name="url" value="${orcl.url}"/>
                <property name="username" value="${orcl.username}"/>
                <property name="password" value="${orcl.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--5、支持多数据库厂商的
        type="DB_VENDOR":别名(VendorDatabaseIdProvider)
            作用就是得到数据库厂商的标识(驱动)，mybatis就能根据数据库厂商表示来执行不同的sql

        在sql映射文件中会加载带了正确标识的和不带标识的，但是带了正确标识的优先
    -->
    <databaseIdProvider type="DB_VENDOR">
        <!--为不同数据库厂商起别名-->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>


    <!--将写好的sql映射文件(EmployeeMapper.xml)一定要注册到全局配置文件(mybatis-config.xml)中-->
    <!--6、mappers:将sql映射注册到全局配置中-->
    <mappers>
        <!--mapper:注册一个sql映射
                注册配置文件
                resource:引用类路径下的sql映射文件
                url:引用网络路径或者磁盘路径下的资源
                注册接口
                class:引用(注册)接口
                    1、有sql映射文件，映射文件名必须和接口同名并且放在与接口同一目录下
                    2、没有sql映射文件，所有sql都是利用注解写在接口上

                推荐：比较重要的、复杂的Dao接口写sql映射文件
                       不重要的，简单地Dao接口为了开发快速可以使用注解
        -->

       <!-- <mapper resource="mybatis/mappers/EmployeeMapper.xml"/>
        <mapper class="com.atguigu.mybatis.dao.EmployeeMapperAnnotation"/>-->

        <!--        &lt;!&ndash; 批量注册&ndash;&gt;-->
              <package name="com.atguigu.mybatis.dao" />
    </mappers>
</configuration>